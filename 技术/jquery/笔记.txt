

jquery 是一个写得更少，但做得更多的轻量级JavaScript库
如何选取HTML元素，如何对它们执行移动 及操作
CSS操作
HTML DOM 遍历 和修改

jquery是为处理HTML事件而特别设计的
把jquery代码置于文档就绪事件处理器
把jquery代码置于事件处理函数中

事件：click dbclick focus mouseover

jquery获得内容和属性
jquery中非常重要的部分，就是操作DOM的能力
text() 设置或返回所选元素的文本内容
html() 设置或返回所选元素的内容（包括html标记）
val() 设置或返回表单字段的值

attr()

JAVASCRIPT
改进设计 验证表单  检测浏览器 创建cookies
脚本可放置在HTML页面的<body>和<head>部分中。
可以不必使用type="text/javascript"
通常，我们需要在某个事件发生时执行代码，比如当用户点击按钮时
通常的做法是把函数放入 <head> 部分中，或者放在页面底部。这样就可以把它们安置到同一处位置，不会干扰页面的内容。


# 写入HTML输出
document.write("<h1>this is a heading</h1>");
document.write("<p>this is a paragraph</p>");

# 对事件作出反应
<button onclick="">

使用javascript来处理HTML内容

match返回匹配的值或null

isNaN 检查参数是否是非数字值

访问某个HTML元素 可以使用document.getElementById(id)方法

可以在文本字体串中使用反斜杠对代码进行换行

value=undefined
布尔类型 true or false

# 数组
var cars = new Array();
cars[0] = "audi";
cars[1] = "BMW";

var cars = new Array("Audi", "BMW", "Volvo");
var cars = ["Audi", "BMW", "Volvo"];

# 对象
objectName.propertyName
objectName.methodName()

var person = {firstname: "Bill", lastname: "Gates", id: 5566}
name = person.lastname
name = person["lastname"]

person = new Object();
person.firstname = "Bill";
person.age = 56;

Undefined 与 null

声明
var carname = new String;
var x = new Number;
var y = new Boolean;
var cars = new Array;
var person = new Object;

javascript中的所有事物都是对象：字符串 数字 数组 对象 日期等等
对象拥有属性和方法

var txt = "hello";
txt.length = 5;  # 属性
txt.indexOf()
txt.replace()

camel-case标记函数

使用函数的返回值
var myVar = myFunction();
document.getElementById("demo").innerHTML = myFunction();

函数中的变量 是局部变量，函数外声明的变量是全局变量

数字和字符串相加，结果将成为字符串

=== 全等（值为类型）
&& || !
(condition)?value1:value2


通过可编程的对象模型，javascript获得了足够的能力来创建动态的HTML
可以改变 HTML元素
HTML元素的属性
改变CSS样式
对事件做出反应

要操作HTML元素，首先要找到它，有三种方法可以实现
通过id来找到
通过HTML标签名
通过类名

接下来，将学到
如何改变HTML元素的内容
如何改变HTML元素的样式
如何对HTML_DOM事件作出反应
如何添加或删除HTML元素

向一个已存在的元素追加其他元素

appendChild(ele)
removeChild(ele)  # 必需指明父元素
var chile = document.getElementById("p1")
child.parentNode.removeChild(child)