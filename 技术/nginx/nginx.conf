# 使用的用户和组
user www www;

# 指定工作进程数（一般为cpu的核数或核数的两倍）
worker_processes 2;

# 指定错误日志路径，日志级别为：[ debug | info | notice | warn | error | crit ]
error_log /var/log/nginx/error.log crit;

# pid存放路径
pid /run/nginx.pid;

# 文件描述符数量
worker_rlimit_nofile 65535;
events
{
    # 使用的网络I/O模型，linux系统推荐采用epoll模型，FreeBSD系统推荐采用kqueue模型
    use epoll;
    # 允许的连接数
    worker_connections 65535;
}

http
{
    include mime.types;
    default_type application/octet-stream;

    # 设置使用的字符集，如果一个网站有多个字符集，请不要随便设置，应让程序员在HTML代码中通过Meta设置
    #charset gb2312;

    server_names_hash_bucket_size 128;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    # 客户端上传的文件大小限制
    client_max_body_size 8m;

    sendfile on;  # 启用sendfile，linux中高效地传输数据机制，与read和write相比，减少了用户空间的操作，并减少了内核上下文切换
    tcp_nopush on;
    keepalive_timeout 60;
    tcp_nodelay on;
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;
    # 开启gzip压缩
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types text/plain application/x-javascript text/css application/xml;
    gzip_vary on;

    #limit_zone crawler $binary_remote_addr 10m;

    server
    {
        listen 80;
        server_name 127.0.0.1;
        index index.html index.htm index.php;
        root /var/www/html;

        #limit_conn crawler 20;

        location /{
            echo 'hello';
        }

        location ~ .*\.(php|php5)?$
        {
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            include fastcgi.conf;
        }

        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|ico)$
        {
            expires 30d;
        }

        location ~ .*\.(js|css)?$
        {
            expires 15d;
        }

        log_format access '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" $http_x_forwarded_for';

        access_log /var/log/nginx/access.log access;

        #access_log off;
    }
}


