list.sort(func=None, key=None, reverse=False) 


sorted(list)返回一个对象，可以用作表达式。原来的list不变，生成一个新的排好序的list对象。
list.sort() 不会返回对象，改变原有的list。




－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
# studentshow/app/studentshow.py
info_list = sorted(info_list, key=lambda x : x['total_ranking'], reverse=False)
## (x['config_type'], x['weight'])

sorted函数默认从低到高排序，
若想从高到低排序，设置reverse=True


－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
方法1.用List的成员函数sort进行排序
方法2.用built-in函数sorted进行排序（从2.4开始）


>>> help(list.sort)
Help on method_descriptor:

sort(...)
    L.sort(cmp=None, key=None, reverse=False)

sorted(...)
    sorted(iterable, cmp=None, key=None, reverse=False)


例
Sorting  keys:
>>>L = [('b',2),('a',1),('c',3),('d',4)]
>>>print sorted(L, key=lambda x:x[1]))
[('a', 1), ('b', 2), ('c', 3), ('d', 4)]

金菊，下面这两条都是用cid 2？